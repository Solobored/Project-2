{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce API",
    "description": "API for managing products and customer orders",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "https://your-render-app.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Product management endpoints"
    },
    {
      "name": "Orders",
      "description": "Customer order management endpoints"
    }
  ],
  "paths": {
    "/api/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "Retrieve a list of all products",
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "integer",
                      "example": 2
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Add a new product to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get a product by ID",
        "description": "Retrieve a single product by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update a product",
        "description": "Update a product by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product",
        "description": "Delete a product by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "description": "Retrieve a list of all customer orders",
        "responses": {
          "200": {
            "description": "A list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "count": {
                      "type": "integer",
                      "example": 2
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "description": "Add a new customer order to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get an order by ID",
        "description": "Retrieve a single order by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Orders"],
        "summary": "Update an order",
        "description": "Update an order by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Delete an order",
        "description": "Delete an order by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c85"
          },
          "name": {
            "type": "string",
            "example": "Smartphone X"
          },
          "description": {
            "type": "string",
            "example": "Latest smartphone with advanced features"
          },
          "price": {
            "type": "number",
            "example": 799.99
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          },
          "inStock": {
            "type": "boolean",
            "example": true
          },
          "quantity": {
            "type": "integer",
            "example": 50
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/smartphone-x.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T12:00:00Z"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": ["name", "description", "price", "category", "quantity"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Smartphone X"
          },
          "description": {
            "type": "string",
            "example": "Latest smartphone with advanced features"
          },
          "price": {
            "type": "number",
            "example": 799.99
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          },
          "inStock": {
            "type": "boolean",
            "example": true
          },
          "quantity": {
            "type": "integer",
            "example": 50
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/smartphone-x.jpg"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "60d21b4667d0d8992e610c86"
          },
          "customer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "john@example.com"
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "123 Main St"
                  },
                  "city": {
                    "type": "string",
                    "example": "Anytown"
                  },
                  "state": {
                    "type": "string",
                    "example": "CA"
                  },
                  "zipCode": {
                    "type": "string",
                    "example": "12345"
                  },
                  "country": {
                    "type": "string",
                    "example": "USA"
                  }
                }
              }
            }
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "quantity": {
                  "type": "integer",
                  "example": 2
                },
                "price": {
                  "type": "number",
                  "example": 799.99
                }
              }
            }
          },
          "totalAmount": {
            "type": "number",
            "example": 1599.98
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "shipped", "delivered", "cancelled"],
            "example": "pending"
          },
          "paymentMethod": {
            "type": "string",
            "example": "credit_card"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-04-15T12:00:00Z"
          }
        }
      },
      "OrderInput": {
        "type": "object",
        "required": ["customer", "products", "totalAmount", "status"],
        "properties": {
          "customer": {
            "type": "object",
            "required": ["name", "email"],
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "john@example.com"
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "123 Main St"
                  },
                  "city": {
                    "type": "string",
                    "example": "Anytown"
                  },
                  "state": {
                    "type": "string",
                    "example": "CA"
                  },
                  "zipCode": {
                    "type": "string",
                    "example": "12345"
                  },
                  "country": {
                    "type": "string",
                    "example": "USA"
                  }
                }
              }
            }
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["productId", "quantity", "price"],
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "60d21b4667d0d8992e610c85"
                },
                "quantity": {
                  "type": "integer",
                  "example": 2
                },
                "price": {
                  "type": "number",
                  "example": 799.99
                }
              }
            }
          },
          "totalAmount": {
            "type": "number",
            "example": 1599.98
          },
          "status": {
            "type": "string",
            "enum": ["pending", "processing", "shipped", "delivered", "cancelled"],
            "example": "pending"
          },
          "paymentMethod": {
            "type": "string",
            "example": "credit_card"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "oneOf": [
              {
                "type": "string",
                "example": "Server Error"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["Name is required", "Price must be a positive number"]
              }
            ]
          }
        }
      }
    }
  }
}